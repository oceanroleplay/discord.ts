"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5644],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var d=r.createContext({}),u=function(t){var e=r.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},p=function(t){var e=u(t.components);return r.createElement(d.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,d=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),s=u(n),m=a,b=s["".concat(d,".").concat(m)]||s[m]||c[m]||o;return n?r.createElement(b,l(l({ref:e},p),{},{components:n})):r.createElement(b,l({ref:e},p))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,l=new Array(o);l[0]=s;var i={};for(var d in e)hasOwnProperty.call(e,d)&&(i[d]=e[d]);i.originalType=t,i.mdxType="string"==typeof t?t:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},4532:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={},l="@ButtonComponent",i={unversionedId:"decorators/gui/button-component",id:"decorators/gui/button-component",title:"@ButtonComponent",description:"add button interaction handler for your bot using @ButtonComponent decorator",source:"@site/docs/decorators/gui/button-component.md",sourceDirName:"decorators/gui",slug:"/decorators/gui/button-component",permalink:"/docs/decorators/gui/button-component",draft:!1,editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/gui/button-component.md",tags:[],version:"current",lastUpdatedBy:"Victorique",lastUpdatedAt:1658340795,formattedLastUpdatedAt:"Jul 20, 2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"@Reaction",permalink:"/docs/decorators/general/reaction"},next:{title:"@ContextMenu",permalink:"/docs/decorators/gui/context-menu"}},d={},u=[{value:"Example",id:"example",level:2},{value:"Signature",id:"signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"custom_id",id:"custom_id",level:3},{value:"options",id:"options",level:3},{value:"<code>botIds</code>",id:"botids",level:4},{value:"<code>Guilds</code>",id:"guilds",level:4}],p={toc:u};function c(t){let{components:e,...o}=t;return(0,a.kt)("wrapper",(0,r.Z)({},p,o,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"buttoncomponent"},"@ButtonComponent"),(0,a.kt)("p",null,"add button interaction handler for your bot using ",(0,a.kt)("inlineCode",{parentName:"p"},"@ButtonComponent")," decorator"),(0,a.kt)("p",null,"Here are some example screenshots:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(3579).Z,width:"493",height:"225"})),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\nclass Example {\n  @Slash("hello")\n  async hello(interaction: CommandInteraction) {\n    await interaction.deferReply();\n\n    // Create the button, giving it the id: "hello-btn"\n    const helloBtn = new MessageButton()\n      .setLabel("Hello")\n      .setEmoji("\ud83d\udc4b")\n      .setStyle("PRIMARY")\n      .setCustomId("hello-btn");\n\n    // Create a MessageActionRow and add the button to that row.\n    const row = new MessageActionRow().addComponents(helloBtn);\n\n    interaction.editReply({\n      content: "Say hello to bot",\n      components: [row],\n    });\n  }\n\n  // register a handler for the button with id: "hello-btn"\n  @ButtonComponent("hello-btn")\n  myBtn(interaction: ButtonInteraction) {\n    interaction.reply(`\ud83d\udc4b ${interaction.member}`);\n  }\n}\n')),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"ButtonComponent(\n  custom_id: string | RegExp,\n  options?: { guilds?: Snowflake[]; botIds?: string[] }\n)\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("h3",{id:"custom_id"},"custom_id"),(0,a.kt)("p",null,"A unique id for your button interaction to be handled under."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"default"),(0,a.kt)("th",{parentName:"tr",align:null},"required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"string ","|"," RegExp"),(0,a.kt)("td",{parentName:"tr",align:null},"function name"),(0,a.kt)("td",{parentName:"tr",align:null},"No")))),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"As per discord latest announcement, ",(0,a.kt)("inlineCode",{parentName:"p"},"custom_ids")," being unique within a message. ",(0,a.kt)("a",{parentName:"p",href:"https://discord.com/developers/docs/interactions/message-components#custom-id"},"read here more"))),(0,a.kt)("h3",{id:"options"},"options"),(0,a.kt)("p",null,"Multiple options, check below."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"default"),(0,a.kt)("th",{parentName:"tr",align:null},"required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"object"),(0,a.kt)("td",{parentName:"tr",align:null},"undefined"),(0,a.kt)("td",{parentName:"tr",align:null},"No")))),(0,a.kt)("h4",{id:"botids"},(0,a.kt)("inlineCode",{parentName:"h4"},"botIds")),(0,a.kt)("p",null,"Array of bot ids, for which only the event will be executed."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"string","[ ]"),(0,a.kt)("td",{parentName:"tr",align:null},"[ ]")))),(0,a.kt)("h4",{id:"guilds"},(0,a.kt)("inlineCode",{parentName:"h4"},"Guilds")),(0,a.kt)("p",null,"The guilds where the command is created"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"string","[ ]"),(0,a.kt)("td",{parentName:"tr",align:null},"[ ]")))))}c.isMDXComponent=!0},3579:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/button-example-d5dad5e3ccdbe2cbdb1556cf89810d30.jpg"}}]);