"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7402],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,g=p["".concat(d,".").concat(m)]||p[m]||c[m]||l;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9153:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={},o="@Guild",i={unversionedId:"decorators/general/guild",id:"decorators/general/guild",title:"@Guild",description:"You can use this guard to specify which guilds your @Slash commands are created by decorating the method with @Slash and @Guild",source:"@site/docs/decorators/general/guild.md",sourceDirName:"decorators/general",slug:"/decorators/general/guild",permalink:"/docs/decorators/general/guild",draft:!1,editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/general/guild.md",tags:[],version:"current",lastUpdatedBy:"Victorique",lastUpdatedAt:1658340795,formattedLastUpdatedAt:"Jul 20, 2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"@Guard",permalink:"/docs/decorators/general/guard"},next:{title:"@On - Discord events",permalink:"/docs/decorators/general/on"}},d={},s=[{value:"Supported with",id:"supported-with",level:2},{value:"Example",id:"example",level:2},{value:"Guild at class level",id:"guild-at-class-level",level:2},{value:"Example - Dynamic guild resolver",id:"example---dynamic-guild-resolver",level:2},{value:"Signature",id:"signature",level:2},{value:"type: IGuild",id:"type-iguild",level:2},{value:"Make changes to",id:"make-changes-to",level:2}],u={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"guild"},"@Guild"),(0,r.kt)("p",null,"You can use this guard to specify which guilds your @Slash commands are created by decorating the method with @Slash and @Guild"),(0,r.kt)("h2",{id:"supported-with"},"Supported with"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../gui/button-component"},"@ButtonComponent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../gui/context-menu"},"@ContextMenu")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../gui/select-menu-component"},"@SelectMenuComponent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../commands/simple-command"},"@SimpleCommand")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../commands/slash"},"@Slash"))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\nclass Example {\n  @Slash("hello")\n  @Guild("GUILD_ID") // Only created on the guild GUILD_ID\n  private hello() {\n    // ...\n  }\n\n  @Slash("bye")\n  @Guild("GUILD_ID", "GUILD_ID2") // Only created on the guild GUILD_ID and GUILD_ID2\n  private bye() {\n    // ...\n  }\n}\n')),(0,r.kt)("h2",{id:"guild-at-class-level"},"Guild at class level"),(0,r.kt)("p",null,"You can set the guild IDs for all @Slash inside the class by decorating the class with @Guild"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n@Guild("GUILD_ID", "GUILD_ID2")\nclass Example {\n  @Slash("hello") // Only created on the guild GUILD_ID and GUILD_ID2\n  private hello() {\n    // ...\n  }\n\n  @Slash("hello2") // Only created on the guild GUILD_ID and GUILD_ID2\n  private hello2() {\n    // ...\n  }\n}\n')),(0,r.kt)("h2",{id:"example---dynamic-guild-resolver"},"Example - Dynamic guild resolver"),(0,r.kt)("p",null,"To provide dynamic guild lists, use guild resolver."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"this._client = new Client({\n  botGuilds: [(client) => client.guilds.cache.map((guild) => guild.id)],\n});\n")),(0,r.kt)("h2",{id:"signature"},"Signature"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"@Guild(...guildIds: IGuild[])\n")),(0,r.kt)("h2",{id:"type-iguild"},"type: IGuild"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"IGuild",IGuild:!0},"type IGuild =\n  | Snowflake\n  | Snowflake[]\n  | ((\n      client: Client,\n      command:\n        | DApplicationCommand\n        | DComponent\n        | SimpleCommandMessage\n        | undefined\n    ) => Snowflake | Snowflake[] | Promise<Snowflake> | Promise<Snowflake[]>);\n")),(0,r.kt)("h2",{id:"make-changes-to"},"Make changes to"),(0,r.kt)("p",null,"It either extends or overwrites data configured in below decorators, however, the order of decorators matters."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/decorators/gui/button-component"},"@ButtonComponent")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/decorators/gui/select-menu-component"},"@SelectMenuComponent")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/decorators/general/discord"},"@Discord")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/decorators/commands/simple-command"},"@SimpleCommand")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/decorators/commands/slash"},"@Slash")))}c.isMDXComponent=!0}}]);