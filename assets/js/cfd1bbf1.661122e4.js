"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3726],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,g=u["".concat(s,".").concat(m)]||u[m]||c[m]||l;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9859:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const l={},o="@On - Discord events",i={unversionedId:"decorators/general/on",id:"decorators/general/on",title:"@On - Discord events",description:"You can use this decorator to declare methods that will be executed whenever a Discord event is triggered.",source:"@site/docs/decorators/general/on.md",sourceDirName:"decorators/general",slug:"/decorators/general/on",permalink:"/docs/decorators/general/on",draft:!1,editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/general/on.md",tags:[],version:"current",lastUpdatedBy:"Victorique",lastUpdatedAt:1658340795,formattedLastUpdatedAt:"Jul 20, 2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"@Guild",permalink:"/docs/decorators/general/guild"},next:{title:"@Once - Discord events",permalink:"/docs/decorators/general/once"}},s={},d=[{value:"Get the event payload",id:"get-the-event-payload",level:2},{value:"Signature",id:"signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Name",id:"name",level:3},{value:"EventParams",id:"eventparams",level:3},{value:"botIds",id:"botids",level:4}],p={toc:d};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"on---discord-events"},"@On - Discord events"),(0,a.kt)("p",null,"You can use this decorator to declare methods that will be executed whenever a Discord event is triggered."),(0,a.kt)("p",null,"Our methods must be decorated with the ",(0,a.kt)("inlineCode",{parentName:"p"},"@On(event: string)")," or ",(0,a.kt)("a",{parentName:"p",href:"/docs/decorators/general/once"},"@Once(event: string)")," decorator."),(0,a.kt)("p",null,"It's that simple, when the event is triggered, the method is called:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Discord, On, Once } from "discordx";\n\n@Discord()\nclass Example {\n  @On("messageCreate")\n  private onMessage() {\n    // ...\n  }\n\n  @Once("messageDelete")\n  private onMessageDelete() {\n    // ...\n  }\n}\n')),(0,a.kt)("h2",{id:"get-the-event-payload"},"Get the event payload"),(0,a.kt)("p",null,"For each event a list of arguments is injected in your decorated method, you can type this list thanks to the ",(0,a.kt)("inlineCode",{parentName:"p"},'ArgsOf<"YOUR_EVENT">')," type provided by discord.",(0,a.kt)("strong",{parentName:"p"},"ts"),"."),(0,a.kt)("p",null,"You also receive other useful arguments after that:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The event payload (",(0,a.kt)("inlineCode",{parentName:"li"},'ArgsOf<"YOUR_EVENT">'),")"),(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"Client")," instance"),(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("a",{parentName:"li",href:"/docs/decorators/general/guard"},"guards")," payload")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"You should use JS destructuring for ",(0,a.kt)("inlineCode",{parentName:"p"},'ArgsOf<"YOUR_EVENT">')," like in this example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Discord, On, Client, ArgsOf } from "discordx";\n\n@Discord()\nclass Example {\n  @On("messageCreate")\n  private onMessage(\n    [message]: ArgsOf<"messageCreate">, // Type message automatically\n    client: Client, // Client instance injected here,\n    guardPayload: any\n  ) {\n    // ...\n  }\n}\n')),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"On(event: DiscordEvents, params?: EventParams)\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("h3",{id:"name"},"Name"),(0,a.kt)("p",null,"The event name."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"default"),(0,a.kt)("th",{parentName:"tr",align:null},"required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,a.kt)("h3",{id:"eventparams"},"EventParams"),(0,a.kt)("p",null,"Multiple options, check below."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"default"),(0,a.kt)("th",{parentName:"tr",align:null},"required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"object"),(0,a.kt)("td",{parentName:"tr",align:null},"undefined"),(0,a.kt)("td",{parentName:"tr",align:null},"No")))),(0,a.kt)("h4",{id:"botids"},"botIds"),(0,a.kt)("p",null,"Array of bot ids, for which only the event will be executed."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"string","[ ]"),(0,a.kt)("td",{parentName:"tr",align:null},"[ ]")))))}c.isMDXComponent=!0}}]);