"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4257],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),i=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=i(e.components);return a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=i(t),m=r,g=c["".concat(u,".").concat(m)]||c[m]||d[m]||s;return t?a.createElement(g,l(l({ref:n},p),{},{components:t})):a.createElement(g,l({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,l=new Array(s);l[0]=c;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var i=2;i<s;i++)l[i]=t[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5167:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>i});var a=t(7462),r=(t(7294),t(3905));const s={},l="@SlashGroup",o={unversionedId:"decorators/commands/slash-group",id:"decorators/commands/slash-group",title:"@SlashGroup",description:"Subcommands and groups offer developers an organized and complex way to group commands.",source:"@site/docs/decorators/commands/slash-group.md",sourceDirName:"decorators/commands",slug:"/decorators/commands/slash-group",permalink:"/docs/decorators/commands/slash-group",draft:!1,editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/commands/slash-group.md",tags:[],version:"current",lastUpdatedBy:"Victorique",lastUpdatedAt:1658340795,formattedLastUpdatedAt:"Jul 20, 2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"@SlashChoice",permalink:"/docs/decorators/commands/slash-choice"},next:{title:"@SlashOption",permalink:"/docs/decorators/commands/slash-option"}},u={},i=[{value:"Blueprint",id:"blueprint",level:2},{value:"Example",id:"example",level:2},{value:"Create a group",id:"create-a-group",level:2},{value:"Group",id:"group",level:3},{value:"Subgroup",id:"subgroup",level:3},{value:"Assign a group",id:"assign-a-group",level:2},{value:"Slashes can be added to a group in two ways",id:"slashes-can-be-added-to-a-group-in-two-ways",level:3},{value:"1. Class Level",id:"1-class-level",level:4},{value:"2. Method Level",id:"2-method-level",level:4},{value:"Assign a subgroup",id:"assign-a-subgroup",level:2},{value:"Slashes can be added to a group in two ways",id:"slashes-can-be-added-to-a-group-in-two-ways-1",level:3},{value:"1. Class Level",id:"1-class-level-1",level:4},{value:"2. Method Level",id:"2-method-level-1",level:4},{value:"Structure - Multiple Classes",id:"structure---multiple-classes",level:2},{value:"Signature",id:"signature",level:2},{value:"SlashGroupOptions",id:"slashgroupoptions",level:2},{value:"name",id:"name",level:3},{value:"description",id:"description",level:3},{value:"root",id:"root",level:3}],p={toc:i};function d(e){let{components:n,...s}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,s,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"slashgroup"},"@SlashGroup"),(0,r.kt)("p",null,"Subcommands and groups offer developers an organized and complex way to group commands."),(0,r.kt)("h2",{id:"blueprint"},"Blueprint"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"We call this grouping Level 1")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"command\n|\n|__ subcommand\n|\n|__ subcommand\n\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"We call this grouping Level 2")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"command\n|\n|__ subcommand-group\n    |\n    |__ subcommand\n|\n|__ subcommand-group\n    |\n    |__ subcommand\n")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"In the following example, slash permission commands are grouped under permissions and subgrouped by role and user."),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(2832).Z,width:"1556",height:"664"})),(0,r.kt)("h2",{id:"create-a-group"},"Create a group"),(0,r.kt)("p",null,"To create a slash group, you need a class decorated with @Discord. Selected class metadata such as botId, permissions, etc will be used to build slash group command."),(0,r.kt)("h3",{id:"group"},"Group"),(0,r.kt)("p",null,"We create a group with a selected class in the following code example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n@SlashGroup({ name: "permission", description: "Manage permissions" })\nclass Example {\n  //\n}\n')),(0,r.kt)("h3",{id:"subgroup"},"Subgroup"),(0,r.kt)("p",null,"We create a group and subgroup with a selected class in the following code example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n@SlashGroup({ name: "permission", description: "Manage permissions" })\n@SlashGroup({\n  name: "user",\n  description: "Manage permissions",\n  root: "permission", // need to specify root\n})\nclass Example {\n  //\n}\n')),(0,r.kt)("h2",{id:"assign-a-group"},"Assign a group"),(0,r.kt)("p",null,"We have created a group in the above steps, It's time to assign our slash commands to group."),(0,r.kt)("h3",{id:"slashes-can-be-added-to-a-group-in-two-ways"},"Slashes can be added to a group in two ways"),(0,r.kt)("p",null,"The following structure will be followed by our group"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"get\n|\n|__ role\n|\n|__ user\n")),(0,r.kt)("h4",{id:"1-class-level"},"1. Class Level"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n// Create a group\n@SlashGroup({ name: "get", description: "Get a role or user" })\n// Assign all inherit slashes to the group\n@SlashGroup("get")\nclass Example {\n  @Slash()\n  role() {\n    // ...\n  }\n\n  @Slash()\n  user() {\n    // ...\n  }\n}\n')),(0,r.kt)("h4",{id:"2-method-level"},"2. Method Level"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n// Create a group\n@SlashGroup({ name: "get", description: "Get a role or user" })\nclass Example {\n  @Slash()\n  // Assign slash to the group\n  @SlashGroup("get")\n  role() {\n    // ...\n  }\n\n  @Slash()\n  // Assign slash to the group\n  @SlashGroup("get")\n  user() {\n    // ...\n  }\n}\n')),(0,r.kt)("h2",{id:"assign-a-subgroup"},"Assign a subgroup"),(0,r.kt)("p",null,"We have created a group and a subgroup in the above steps, It's time to assign our slash commands to groups."),(0,r.kt)("h3",{id:"slashes-can-be-added-to-a-group-in-two-ways-1"},"Slashes can be added to a group in two ways"),(0,r.kt)("p",null,"The following structure will be followed by our group"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"permission\n|\n|__ user\n    |\n    |__ get\n    |\n    |__ set\n")),(0,r.kt)("h4",{id:"1-class-level-1"},"1. Class Level"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n// Create a group\n@SlashGroup({ name: "permission", description: "Manage permissions" })\n// Create a sub group\n@SlashGroup({ name: "user", root: "permission" })\n// Assign all inherit slashes to the subgroup\n@SlashGroup("user", "permission")\nclass Example {\n  @Slash()\n  get() {\n    // ...\n  }\n\n  @Slash()\n  set() {\n    // ...\n  }\n}\n')),(0,r.kt)("h4",{id:"2-method-level-1"},"2. Method Level"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n// Create a group\n@SlashGroup({ name: "permission", description: "Manage permissions" })\n// Create a sub group\n@SlashGroup({ name: "user", root: "permission" })\nclass Example {\n  @Slash()\n  // Assign slash to subgroup\n  @SlashGroup("user", "permission")\n  get() {\n    // ...\n  }\n\n  @Slash()\n  // Assign slash to subgroup\n  @SlashGroup("user", "permission")\n  set() {\n    // ...\n  }\n}\n')),(0,r.kt)("h2",{id:"structure---multiple-classes"},"Structure - Multiple Classes"),(0,r.kt)("p",null,"It's sometimes difficult to use a single class for too many commands. We offer the flexibility to divide your group into multiple classes."),(0,r.kt)("p",null,"The following structure will be followed by our group"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"permission\n|\n|__ info\n|\n|__ user\n    |\n    |__ get\n    |\n    |__ set\n|\n|__ role\n    |\n    |__ get\n    |\n    |__ set\n")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Look closely at the code, only Permission class is used to create slash group, all other classes are children."),(0,r.kt)("p",{parentName:"admonition"},"Other slashes class metadata won't be used and will be overwritten by the root class.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n// Create a group\n@SlashGroup({ name: "permission", description: "Manage permissions" })\n// Assign all inherit slashes to the subgroup\n@SlashGroup("permission")\nclass Permission {\n  @Slash()\n  info() {\n    // ...\n  }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n// Create a sub group\n@SlashGroup({ name: "user", root: "permission" })\n// Assign all inherit slashes to the subgroup\n@SlashGroup("user", "permission")\nclass UserPermission {\n  @Slash()\n  get() {\n    // ...\n  }\n\n  @Slash()\n  set() {\n    // ...\n  }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n// Create a sub group\n@SlashGroup({ name: "role", root: "permission" })\n// Assign all inherit slashes to the subgroup\n@SlashGroup("role", "permission")\nclass RolePermission {\n  @Slash()\n  get() {\n    // ...\n  }\n\n  @Slash()\n  set() {\n    // ...\n  }\n}\n')),(0,r.kt)("h2",{id:"signature"},"Signature"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Create a new group or subgroup\nSlashGroup(options: SlashGroupOptions): ClassDecoratorEx\n\n// Assign slashes to a group\nSlashGroup(name: string): ClassMethodDecorator\n\n// Assign slashes to a subgroup\nSlashGroup(name: string, root: string): ClassMethodDecorator\n")),(0,r.kt)("h2",{id:"slashgroupoptions"},"SlashGroupOptions"),(0,r.kt)("h3",{id:"name"},"name"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"description"},"description"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"undefined")))),(0,r.kt)("h3",{id:"root"},"root"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"undefined")))))}d.isMDXComponent=!0},2832:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/permissions-40a78122fe8788e2786f51d4aff3f91c.png"}}]);